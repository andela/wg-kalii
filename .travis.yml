language: python

# Cache the pip files
cache:
  directories:
    - $HOME/.cache/pip
    - $HOME/.nvm
    - node_modules
    - wger/node_modules

# Use container infrastructure
# http://blog.travis-ci.com/2014-12-17-faster-builds-with-container-based-infrastructure/
sudo: false

# Python versions to test
python:
  - "3.5"

# Manually define here the combinations environment variables to test
# https://github.com/travis-ci/travis-ci/issues/1519
env:
  - TEST_MOBILE=True  DB=postgresql TRAVIS_NODE_VERSION="6"
  - TEST_MOBILE=True  DB=sqlite     TRAVIS_NODE_VERSION="6"
  - TEST_MOBILE=False DB=postgresql TRAVIS_NODE_VERSION="6"
  - TEST_MOBILE=False DB=sqlite     TRAVIS_NODE_VERSION="6"
  global:
  - secure: 6iDP4pE6TG9abV6vZZsOwnvEgfp3gMQhe73hdvEK3tk43RA+pkK6H7quYdbrHX0GmE/BIWXAEUxMdzeV5Ar85ZgMd0oLgwswcNyfi4fC3AbrUc07J0Z3WTjr1u4LSh94MYPLxg+sEs1FFPBzWvaC0r/KCJ/SxfAPVZoLT6EfUakmkY0vzjjU8GpUIKGc5iA6nmgszD/xyqcYtHBV/ayVXkCpF9/sKvey2GeAw0mFLJ41WaVUUP/8P9JgtMCgkE/F0Omn+JqdaOyKCS/cT/61ADEgZIxUWUDNzyZ0FqVu+8VxhbOVPJ7sUwi6/CkSjSMumD4/wS8saay8rYzm99+IWYHb9iERgvAIg2Bc5OnAY1X2HKvBowBcsLQpMoi+i5NRsHgPkF+qZohy4HR6ZfHgLB17+iZCV2hCjNMEvpP9nCjkdBPrfnHPYB/Kaxc3CAUUVSa/Z41hN4JgXgh93jaadNvD/IJtDNzjD59g/j3XaNs68z0vPP1aPezeR8c0KqmflM/Ebm5iuPTCdMKaODCpmVi/M2jPP/J0tGwFY9tdqe0ncAyTen0Mpay2ud4kLQfcSN3ySEJfRcWRErNwv9TZHXj8hvN+4MbdMWY8F6lfgM5Bi9teNBgT3qQwq/roaaCaf/bWWPO61b8iePlF6+K6pULmZb2qiMb2/NyYsXjlI9w=
  - secure: Ugfae9BTd50IQN6NWH7pTqQmc7GkLkIGrh4qV0Dpi57llvoiDIx9ZpO5TZFBUHwr5HsZXJhkqRr7kKdfrxM/o8PaY3mmpOZ50Gx71onc+t/fcDvGio21MI6GpmmsSedGBIExU5G3eKR1RpTzluxmuFHJXukcrzSuPLpI4nHGBwA7LaHsW02c66d+26p2HSdkJYM2xDeCCOzH5H8sw+3PBjfsM2+jL/T4/wskgNreDukC9ducd+pQQD1E1dqKw+FKVvjaRhGWsXSjSQZfrTsvu5xB8tyFLrnbqhix2NFjT5rcu+RCkNe4PCUTZwjmFcYR88Sk9Znn0Bx1PZreSrwjjYcByfmMWrpdp2eiA8hgwm5MpgXCIiTletCQOuxaO1YTQxVmqesDsD6Ffi4Lp6LgKkDV9wuowud+e9EnkNWS6XJ+/I8VRDriXdM3S2ZioQrPShUbk8iWHpCEtwQAmx5LgVWcSry2MutusDiXjaiRelxqlWWMPsIfbg3GuP6YGXb7j7tohMheXjeDEoWhy6RK0fkrrxts4MO0JKnvCE5z+ESWVzn7YfutV8eUj6fKEtmoeeahWYff7xXH+zecdDJGKV6ZWyvzLiMSeyjlwJDkgYqcmLCDLwr6R/XCcbFcLPro+0liJVDwMWWeOAbAk8BTdTNLdixRNC33Au2+90t5gKY=
  - secure: oZ55myj236lcDmnG56cIwuwgFYPeroX42pRS4ilE2I7oF5xDvnm9tSafZH4z+bQ0hWXtnj+CFa8JWEhHUGoEHb9FzPOMsMJG14H/zT0+TRYITwcD7iH9XJWNi9JP7/rPkEoadYw5i6qxHJqV66F1gxwWo5ucs3faEPfGU1w2vwqUAQlEtJ/8+0HnhBdQBPJrXL9TL5V2ZvaWLsyYvkVpFOlAkBz3vFAi77cWpx2vn6dzf2Aygg6iSxmBM3RVhH8hBYjbZP7pUQHsDfovfYAwA1UItZ6Zdkc4a62LP/Ch6Bxm02JIqrCvdaMXJVcvf2hdYLim3oyKJgIvYf1U5Fu7VD5+FeRxxmN6GuDZ0TrBWB0wRBGF3N9SNirDyUBoxw4TFjVpPY+Q7Fx0MUf45Rj963Z8DcdUhn2rhV6yOhQEtg+wcsGnsTnfYVMjEZHhgiAggW3zx9GtqMVEZ8mMKt82HQSguyrBEdcXZoKpSCnFJZmB47IVDaJn7numH8JPShD5drQY/Xqh7KeUNcfVz0dEZackpeVBanfEzVfpraCpYrO8aIeT+BgJNdIPczASIecLVtpWn/L4rRMG5jokW+xjPhNmh+w5rK9kRsImyOUtwR5vGPapVEk2hICMdnKYBL5Ef2egNy/WQI5/zRsPvqj3BP9SQnhA7ryqnGOB6e94VUs=
  - secure: hnbFqEzT8XqD/wdRhDJlshnHpqZzPmIS1yGbSUsMKl8YzCMkr1jF08JJzEKrvGBZWpVMmC+FtOhLTyg+kq+8u7nPtEBoZUAYGrPzlINX5J0c1oOzy6s5CVBiGfS8Rs3imG/dAlxipZlBrRlWnjWjdmLmXxcDy+7l9MsMtLj/sVGhEPgBLQRtaBLylAR8lBVRR21W9IXxZSH/TEuNXzu3jE0MIif3tFNip6xWVhzoA6fppHeFS+JJ7+edhYQQzBUPQxllfTMci65Guqa+c4oa78dfg/SIxIoF4+zXMCYDtQ8UXN8U5CACQtBEKix+W+2sszcMJ8ueJCA4bdz98NmTf1Mmdh988YJPws7SYUnjsh0Dr2KqWopblkmilSojlJqqyy60hZbg+jfpQEuv3rBv/dyqArhyYrK8NBYxF/9g/y7fAZcBhvQ/139UaCgYx7PHyRQUt+rJPy6T6EmDamY+tiXr5aq1HfbIcLz7M/CQbZfwcblFVOlj5b7H2G/jJt2UUq09IxjQVih9Mn7C5F8Vt5lCZhTNYXK/EDSfg7s4HSxdzhbVDA/j8OSwnuZ69L4puth2etoutTHsrw3ff917q17f3GMuX5TDiD+cRpRhNL6iwqYyi+0MyjEOP2dSEIkear1fjYuLaDpJVV/2VvM04GfRXD8gvzO5LslOv3xkhPI=
  - secure: KaIbVeGVU3gGHvqPma0EWaGWynk/+nj9mmI7aFF+DiQ9JQmtreBxc0PTlA0f6oRUKu5zIoekMprgR7dWC+n4HJxoeF+RUcBcYFzF2LGuKc0rX5FPEi7ZLG427RX3oVYCxHKQGLv2W3Q6yp0Q0W/wLVz5gMLT2yhIsxsBcQPfytr+DaxOfWFyR6yMjObDzIu7IBqMGRHXgDXSvMWX6ivIdIqRZ0hirYk8OrXTyWrdBJQddXPm9LwRRUH47zSt5N6Rbw5LjD8QxXAR9B3L3bIGguqFO9lNwpRHHfTBgYQzOp1z0i+kSkrnB+bzB4shUhjRo24/n++7Kml2KT3MmUpGiAqCpG2EllEnU2E59ZLvEzACV0yqzNGjR95765AZ5tl/jekiTTvpM8JV6sFts9tfMjM3OrdDUugFG85r9JZLAP4+0VyFVghBAFji+ua2Ams9g//UpBwenxQjrffvSWI7U4pShzigppeXIiO8i0CdmIbaSp5gbuPsyQLxa/OVmWX/RpAyfhbA231sv8S318QclqJhfKGNQ77/ZQQLst949J5lddqcv9ctmDVC2jjKs6K9mQamrn4OKT+kV/ur3K3o0MIUjqaJbilSipkOLaUlkosHa3gEPsR4pJLIjN1tQIjbRCiPWjzhrI0Z5zXgDOgFDsbf6huGUt059IKeItulVd8=
  - secure: xh/BxjMl/KJtraJ04m5oljtkfsGNng3uklUlXpfBfTDbDe29UqyznMzDSs1S8EZ/y8Tww2lBswdl3CJSzo5a0RY7k3hm0z5DR7pYLf1ep7QqhWaNxjK+/hDN4KIT2S8fxIcNvTbZuFbOrjCZp2Bo5n5N1Cv7PKeBiY8HqC+UEBxmagRt35UGDqriST2xvjOcMsHbAKuDKCVZsY/NyqPxClMoxLZLKlSv/e+7WQRl3MvOnCjcWYddhDdMWknnqFrlam3Se0ibh1FwacWuUgwi0eZTxkKHcWYYEiiMe0nrx1GLtXZ9A6qucz9tmYBW5aR607DqkUYTsYTSxpBUbywauma6dCcHvIslF2zS5QIY1wPQrgZTaFNE9gvdFHM4KqCe1Q0hRdzadoQbNlaDa20oqzibr2h/keCEiGT3i3+mV4yCDdREbtcAlC6iK4s+S+W/OQE2qLUj/jIVBXJFI331gZHdLuRiIiiYs14vKpr9Bnood/6MNjUqHy+tGgH+Rf4EkT4Py23t6/JXljOM2mRd1QEdRy4tQWS73mHU1QTfBQVdyRJjHWEtcZSLAQ4lgXDAu2tRz6Rw6KqxzQgyD0fXlWM9aEvTRdIYvYJAae9hNcRTZSUQezUHT/gVEDQ6yQbs0qb4fFYtIQpBzZX2cDxn3Y5NOyY9mFswxfajm4H230g=

# Install the application
install:
  # Update nvm and set wanted Node version.
  # We update nvm using the script method instead of git, which is selected
  # automatically, as git won't work because the $HOME/.nvm is not a git
  # repository and the directory is not empty.
  - curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.1/install.sh | METHOD=script bash
  - . $HOME/.nvm/nvm.sh
  - nvm install $TRAVIS_NODE_VERSION
  - nvm use $TRAVIS_NODE_VERSION

  # Install requirements
  - npm install
  - pip install -r requirements.txt
  - pip install coverage
  - pip install flake8-putty
  - pip install django-extensions
  - npm install -g gulp gulp-cli

  - if [[ "$DB" = "postgresql" ]]; then pip install psycopg2; fi

  # Setup application
  - if [[ "$DB" = "sqlite" ]]; then invoke create_settings; fi
  - if [[ "$DB" = "postgresql" ]]; then invoke create_settings --database-type postgresql; fi

# Create test databases
before_script:
  - if [[ "$DB" = "postgresq" ]]; then psql -c 'DROP DATABASE IF EXISTS test_wger;' -U postgres; fi
  - if [[ "$DB" = "postgresql" ]]; then psql -c 'CREATE DATABASE test_wger;' -U postgres; fi

# Do the tests
script:
  # Javascript and python linting
  - gulp lint

  # Regular application
  - coverage run --source='.' ./manage.py test


  # Code coverage
  - coverage report
notifications:
  slack: andela:5xJfbanxr8VWtx4vvbtUJQiZ
